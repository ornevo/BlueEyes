{"ast":null,"code":"var _jsxFileName = \"/home/ororor012/Desktop/Development/Projects/BlueEyesShugarmanHackathon/code/blue-eyes/src/components/stateless/WordTableRow.jsx\";\nimport Constants from '../../constants';\nimport Token from \"../stateless/Token\";\nimport { XIcon, PencilIcon, CheckIcon } from '@heroicons/react/solid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WordTableRow(_ref) {\n  let {\n    word,\n    editMode,\n    disableEdit,\n    onEdit,\n    onWordFieldChange,\n    onDoneEditing\n  } = _ref;\n  const color = Constants.SEVERITY_TO_COLOR[word.severity]; // Action icon\n\n  let rightAction = \"\";\n  const actionsClasses = \"h-6 pb-0.5 cursor-pointer mx-1 w-6\";\n  if (editMode) rightAction = /*#__PURE__*/_jsxDEV(CheckIcon, {\n    className: actionsClasses,\n    onClick: onDoneEditing\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 23\n  }, this);else if (disableEdit) rightAction = /*#__PURE__*/_jsxDEV(PencilIcon, {\n    className: actionsClasses + \" text-stone-300 cursor-not-allowed\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 27\n  }, this);else rightAction = /*#__PURE__*/_jsxDEV(PencilIcon, {\n    className: actionsClasses,\n    onClick: () => onEdit(word.id)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 27\n  }, this); // word itself as input or label\n\n  let wordName = '';\n  if (editMode) wordName = /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"px-3 border-white focus:outline-0\",\n    value: word.word,\n    autoFocus: true,\n    onChange: c => onWordFieldChange('word', c.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 20\n  }, this);else wordName = /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"px-3\",\n    children: word.word\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 20\n  }, this); // The severity token, and if edited then the select option\n\n  let severToken = \"\";\n  const baseTokenClasses = \"text-base px-3 select-none cursor-pointer max-0\";\n  const selectedTokenClasses = \"border-2 border-black\";\n  let severityToRoundedStyle = {};\n  severityToRoundedStyle[Constants.SEVERITY_HIGH] = \"rounded-l-0\";\n  severityToRoundedStyle[Constants.SEVERITY_MID] = \"rounded-0\";\n  severityToRoundedStyle[Constants.SEVERITY_LOW] = \"rounded-r-0\";\n  if (editMode) severToken = /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      margin: \"2px 0\"\n    },\n    children: [Constants.SEVERITY_LOW, Constants.SEVERITY_MID, Constants.SEVERITY_HIGH].map(sev => /*#__PURE__*/_jsxDEV(Token, {\n      color: Constants.SEVERITY_TO_COLOR[sev],\n      customStyles: baseTokenClasses + \" mx-0 \" + severityToRoundedStyle[sever] + \" \" + (word.severity === sev ? selectedTokenClasses : ''),\n      onClick: () => onWordFieldChange('severity', sev),\n      children: Constants.SEVERITY_TO_STR[sev]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);else severToken = /*#__PURE__*/_jsxDEV(Token, {\n    color: color,\n    customStyles: \"text-base px-3 select-none\",\n    children: Constants.SEVERITY_TO_STR[word.severity]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-[auto_1fr_auto_1fr_auto] gap-2 bg-white p-4 border border-b-gray-300\",\n    children: [rightAction, wordName, severToken, /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(XIcon, {\n      className: \"h-6 cursor-pointer mx-1 w-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_c = WordTableRow;\nexport default WordTableRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordTableRow\");","map":{"version":3,"sources":["/home/ororor012/Desktop/Development/Projects/BlueEyesShugarmanHackathon/code/blue-eyes/src/components/stateless/WordTableRow.jsx"],"names":["Constants","Token","XIcon","PencilIcon","CheckIcon","WordTableRow","word","editMode","disableEdit","onEdit","onWordFieldChange","onDoneEditing","color","SEVERITY_TO_COLOR","severity","rightAction","actionsClasses","id","wordName","c","target","value","severToken","baseTokenClasses","selectedTokenClasses","severityToRoundedStyle","SEVERITY_HIGH","SEVERITY_MID","SEVERITY_LOW","margin","map","sev","sever","SEVERITY_TO_STR"],"mappings":"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","sourcesContent":["import Constants  from '../../constants';\nimport Token from \"../stateless/Token\";\nimport { XIcon, PencilIcon, CheckIcon } from '@heroicons/react/solid'\n\n\nfunction WordTableRow({word, editMode, disableEdit, onEdit, onWordFieldChange, onDoneEditing}) {\n    const color = Constants.SEVERITY_TO_COLOR[word.severity];\n\n    // Action icon\n    let rightAction = \"\";\n    const actionsClasses = \"h-6 pb-0.5 cursor-pointer mx-1 w-6\";\n    if(editMode)\n        rightAction = <CheckIcon className={actionsClasses} onClick={onDoneEditing}/>;\n    else\n        if(disableEdit)\n            rightAction = <PencilIcon className={actionsClasses + \" text-stone-300 cursor-not-allowed\"} />;\n        else\n            rightAction = <PencilIcon className={actionsClasses} onClick={() => onEdit(word.id)}/>;\n\n    // word itself as input or label\n    let wordName = '';\n    if(editMode)\n        wordName = <input className=\"px-3 border-white focus:outline-0\" value={word.word} autoFocus onChange={c => onWordFieldChange('word', c.target.value)} />;\n    else\n        wordName = <span className=\"px-3\">{word.word}</span>;\n\n    // The severity token, and if edited then the select option\n    let severToken = \"\";\n    const baseTokenClasses = \"text-base px-3 select-none cursor-pointer max-0\";\n    const selectedTokenClasses = \"border-2 border-black\";\n    let severityToRoundedStyle = {};\n    severityToRoundedStyle[Constants.SEVERITY_HIGH] = \"rounded-l-0\";\n    severityToRoundedStyle[Constants.SEVERITY_MID] = \"rounded-0\";\n    severityToRoundedStyle[Constants.SEVERITY_LOW] = \"rounded-r-0\";\n\n    if(editMode) \n        severToken = (\n            <span style={{margin: \"2px 0\"}}>\n                {\n                    [Constants.SEVERITY_LOW, Constants.SEVERITY_MID, Constants.SEVERITY_HIGH].map(sev => (\n                        <Token color={Constants.SEVERITY_TO_COLOR[sev]}\n                        customStyles={baseTokenClasses + \" mx-0 \" + severityToRoundedStyle[sever] + \" \" + (word.severity === sev ? selectedTokenClasses : '')}\n                        onClick={() => onWordFieldChange('severity', sev)}\n                        >\n                            {Constants.SEVERITY_TO_STR[sev]}\n                        </Token>\n\n                    ))\n                }\n            </span>\n        )\n    else\n        severToken = (\n            <Token color={color} customStyles=\"text-base px-3 select-none\">\n                {Constants.SEVERITY_TO_STR[word.severity]}\n            </Token>\n        );\n\n    return (\n        <div className=\"grid grid-cols-[auto_1fr_auto_1fr_auto] gap-2 bg-white p-4 border border-b-gray-300\">\n            {/* Edit / Done icon */}\n            { rightAction }\n\n            {/* Word label / input */}\n            { wordName }\n\n            {/* Severity */}\n            { severToken }\n\n            <span></span>\n            <XIcon className={\"h-6 cursor-pointer mx-1 w-6\"}/>\n        </div>\n    )\n}\n\n\nexport default WordTableRow;"]},"metadata":{},"sourceType":"module"}