{"ast":null,"code":"var _jsxFileName = \"/home/ororor012/Desktop/Development/Projects/BlueEyesShugarmanHackathon/code/blue-eyes/src/components/stateful/WordsBody.jsx\";\nimport { Component } from 'react';\nimport WordTableRow from \"../stateless/WordTableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlusButton(_ref) {\n  let {\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: \"grid shadow-lg cursor-pointer mx-4 place-items-center rounded-full bg-emerald-500 select-none w-12 h-12 text-2xl text-white\",\n    children: \"+\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PlusButton;\n\nclass WordsBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editedWord: undefined,\n      lastSearchTermChange: new Date(),\n      searchTerm: ''\n    };\n  }\n\n  onSearchTemUpdate(n) {\n    const now = new Date();\n    this.setState({\n      lastSearchTermChange: now\n    }, _ => {\n      setTimeout(() => {\n        if (this.state.lastSearchTermChange === now) this.setState({\n          searchTerm: n.target.value\n        });\n      }, 100);\n    });\n  }\n\n  componentDidUpdate(previousProps) {\n    // Check if added word to put in edit word the new word\n    if (previousProps.words.length < this.props.words.length) this.setState({\n      editedWord: this.props.words[0]\n    });\n  }\n\n  onEdit(wId) {\n    this.setState({\n      editedWord: (this.props.words.filter(w => w.id === wId) || [undefined])[0]\n    });\n  }\n\n  onWordFieldChange(field, value) {\n    let currEditedWord = this.state.editedWord;\n\n    if (currEditedWord === undefined) {\n      return;\n    }\n\n    currEditedWord[field] = value;\n    this.setState({\n      editedWord: currEditedWord\n    });\n  }\n\n  render() {\n    console.log(\"dskma\", this.state.editedWord, this.props.words);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-[auto_1fr] mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(PlusButton, {\n          onClick: this.props.addNewWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"my-1 shadow py-1 px-3\",\n          placeholder: \"\\u05D7\\u05D9\\u05E4\\u05D5\\u05E9...\",\n          onChange: this.onSearchTemUpdate.bind(this),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), this.props.words.filter(w => w.word.indexOf(this.state.searchTerm) !== -1).map(w => this.state.editedWord !== undefined && this.state.editedWord.id === w.id ? /*#__PURE__*/_jsxDEV(WordTableRow, {\n        word: this.state.editedWord,\n        editMode: true,\n        onWordFieldChange: this.onWordFieldChange.bind(this),\n        onDoneEditing: () => this.setState({\n          editedWord: undefined\n        })\n      }, w.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(WordTableRow, {\n        word: w,\n        editMode: false,\n        disableEdit: this.state.editedWord !== undefined,\n        onEdit: this.onEdit.bind(this)\n      }, w.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WordsBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlusButton\");","map":{"version":3,"sources":["/home/ororor012/Desktop/Development/Projects/BlueEyesShugarmanHackathon/code/blue-eyes/src/components/stateful/WordsBody.jsx"],"names":["Component","WordTableRow","PlusButton","onClick","WordsBody","constructor","props","state","editedWord","undefined","lastSearchTermChange","Date","searchTerm","onSearchTemUpdate","n","now","setState","_","setTimeout","target","value","componentDidUpdate","previousProps","words","length","onEdit","wId","filter","w","id","onWordFieldChange","field","currEditedWord","render","console","log","addNewWord","bind","word","indexOf","map"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport WordTableRow from \"../stateless/WordTableRow\";\n\n\nfunction PlusButton({onClick}) {\n    return (\n        <div onClick={onClick}\n                className=\"grid shadow-lg cursor-pointer mx-4 place-items-center rounded-full bg-emerald-500 select-none w-12 h-12 text-2xl text-white\"\n        >\n            +\n        </div>\n    )\n}\n\n\nclass WordsBody extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editedWord: undefined,\n            lastSearchTermChange: new Date(),\n            searchTerm: ''\n        };\n    }\n\n    onSearchTemUpdate(n) {\n        const now = new Date();\n        this.setState({lastSearchTermChange: now}, _ => {\n            setTimeout(() => {\n                if(this.state.lastSearchTermChange === now)\n                    this.setState({searchTerm: n.target.value});\n            }, 100);\n        })\n    }\n\n    componentDidUpdate(previousProps) {\n        // Check if added word to put in edit word the new word\n        if(previousProps.words.length < this.props.words.length)\n            this.setState({editedWord: this.props.words[0]});\n    }\n\n    onEdit(wId) {\n        this.setState({editedWord: (this.props.words.filter(w => w.id === wId) || [undefined])[0]});\n    }\n\n    onWordFieldChange(field, value) {\n        let currEditedWord = this.state.editedWord;\n        if(currEditedWord === undefined) {\n            return;\n        }\n        currEditedWord[field] = value;\n        this.setState({editedWord: currEditedWord});\n    }\n\n    render() {\n        console.log(\"dskma\", this.state.editedWord, this.props.words);\n        return (\n            <div className=\"p-5\">\n                <div className=\"grid grid-cols-[auto_1fr] mb-5\">\n                    <PlusButton onClick={this.props.addNewWord}/>\n                    <input className=\"my-1 shadow py-1 px-3\" placeholder=\"חיפוש...\" onChange={this.onSearchTemUpdate.bind(this)} type=\"text\"/>\n                </div>\n                {/* TODO: filtering, sorting, etc... */}\n                {this.props.words.filter(w => w.word.indexOf(this.state.searchTerm) !== -1).map(w => (\n                    (this.state.editedWord !== undefined && this.state.editedWord.id === w.id)\n                    ?\n                    <WordTableRow word={this.state.editedWord} key={w.id}\n                            editMode={true} onWordFieldChange={this.onWordFieldChange.bind(this)}\n                            onDoneEditing={() => this.setState({editedWord: undefined})} />\n                    :\n                    <WordTableRow word={w} key={w.id} editMode={false} disableEdit={this.state.editedWord !== undefined} onEdit={this.onEdit.bind(this)}/>\n                ))}\n            </div>\n        );\n    }\n}\n\n\nexport default WordsBody;"]},"metadata":{},"sourceType":"module"}