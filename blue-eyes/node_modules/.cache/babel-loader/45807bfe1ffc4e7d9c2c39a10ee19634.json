{"ast":null,"code":"var _jsxFileName = \"/home/ororor012/Desktop/Development/Projects/BlueEyesShugarmanHackathon/code/blue-eyes/src/components/stateful/NotificationsBody.jsx\";\nimport { Component } from 'react';\nimport Notification from \"../stateless/Notification\";\nimport Popup from \"../stateless/Popup\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NotificationsBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewedNotId: undefined\n    };\n  }\n\n  onView(notId) {\n    this.setState({\n      viewedNotId: notId\n    }, () => this.props.setPopupOpen(true));\n  }\n\n  onViewClose() {\n    this.setState({\n      viewedNotId: undefined\n    }, () => this.props.setPopupOpen(false));\n  }\n\n  render() {\n    const viewedNot = this.state.viewedNotId && this.props.notifications.find(n => n.id === this.state.viewedNotId);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [viewedNot && /*#__PURE__*/_jsxDEV(Popup, {\n        onClose: this.onViewClose.bind(this),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            direction: \"ltr\"\n          },\n          children: /*#__PURE__*/_jsxDEV(AudioPlayer, {\n            customAdditionalControls: [],\n            src: viewedNot.audio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-4 gap-8 p-5 \" + (this.state.viewedNotId !== undefined && \" blur\"),\n        children: this.props.notifications.map(not => /*#__PURE__*/_jsxDEV(Notification, {\n          data: not,\n          markNotificationAsRead: this.props.markNotificationAsRead,\n          words: this.props.words,\n          onView: this.onView.bind(this)\n        }, not.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default NotificationsBody;","map":{"version":3,"sources":["/home/ororor012/Desktop/Development/Projects/BlueEyesShugarmanHackathon/code/blue-eyes/src/components/stateful/NotificationsBody.jsx"],"names":["Component","Notification","Popup","AudioPlayer","NotificationsBody","constructor","props","state","viewedNotId","undefined","onView","notId","setState","setPopupOpen","onViewClose","render","viewedNot","notifications","find","n","id","bind","direction","audio","map","not","markNotificationAsRead","words"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,sCAAP;;;AAGA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AACtCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAEC;AADJ,KAAb;AAGH;;AAEDC,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACV,SAAKC,QAAL,CAAc;AAACJ,MAAAA,WAAW,EAAEG;AAAd,KAAd,EAAoC,MAAM,KAAKL,KAAL,CAAWO,YAAX,CAAwB,IAAxB,CAA1C;AACH;;AAEDC,EAAAA,WAAW,GAAG;AACV,SAAKF,QAAL,CAAc;AAACJ,MAAAA,WAAW,EAAEC;AAAd,KAAd,EAAwC,MAAM,KAAKH,KAAL,CAAWO,YAAX,CAAwB,KAAxB,CAA9C;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAG,KAAKT,KAAL,CAAWC,WAAX,IACE,KAAKF,KAAL,CAAWW,aAAX,CAAyBC,IAAzB,CAA8BC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAAS,KAAKb,KAAL,CAAWC,WAAvD,CADpB;AAEA,wBACI;AAAA,iBAEQQ,SAAS,iBACL,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKF,WAAL,CAAiBO,IAAjB,CAAsB,IAAtB,CAAhB;AAAA,+BACI;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAE;AAAZ,WAAb;AAAA,iCACI,QAAC,WAAD;AACI,YAAA,wBAAwB,EAAE,EAD9B;AAEI,YAAA,GAAG,EAAEN,SAAS,CAACO;AAFnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHZ,eAcI;AAAK,QAAA,SAAS,EAAE,iCAAiC,KAAKhB,KAAL,CAAWC,WAAX,KAA2BC,SAA3B,IAAwC,OAAzE,CAAhB;AAAA,kBAEK,KAAKH,KAAL,CAAWW,aAAX,CAAyBO,GAAzB,CAA6BC,GAAG,iBAC7B,QAAC,YAAD;AAAc,UAAA,IAAI,EAAEA,GAApB;AAAyB,UAAA,sBAAsB,EAAE,KAAKnB,KAAL,CAAWoB,sBAA5D;AACY,UAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWqB,KAD9B;AACkD,UAAA,MAAM,EAAE,KAAKjB,MAAL,CAAYW,IAAZ,CAAiB,IAAjB;AAD1D,WAC0CI,GAAG,CAACL,EAD9C;AAAA;AAAA;AAAA;AAAA,gBADH;AAFL;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH;;AA3CqC;;AA+C1C,eAAehB,iBAAf","sourcesContent":["import { Component } from 'react';\nimport Notification from \"../stateless/Notification\";\nimport Popup from \"../stateless/Popup\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\n\n\nclass NotificationsBody extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewedNotId: undefined\n        };\n    }\n\n    onView(notId) {\n        this.setState({viewedNotId: notId}, () => this.props.setPopupOpen(true));\n    }\n\n    onViewClose() {\n        this.setState({viewedNotId: undefined}, () => this.props.setPopupOpen(false));\n    }\n\n    render() {\n        const viewedNot = this.state.viewedNotId &&\n                            this.props.notifications.find(n => n.id === this.state.viewedNotId);\n        return (\n            <div>\n                {\n                    viewedNot && (\n                        <Popup onClose={this.onViewClose.bind(this)} >\n                            <span style={{direction: \"ltr\"}}>\n                                <AudioPlayer\n                                    customAdditionalControls={[]}\n                                    src={viewedNot.audio}\n                                />\n                            </span>\n                        </Popup>\n                    )\n                }\n\n                <div className={\"grid grid-cols-4 gap-8 p-5 \" + (this.state.viewedNotId !== undefined && \" blur\")}>\n                    {/* TODO: filtering, sorting, etc... */}\n                    {this.props.notifications.map(not => (\n                        <Notification data={not} markNotificationAsRead={this.props.markNotificationAsRead}\n                                    words={this.props.words} key={not.id} onView={this.onView.bind(this)}/>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default NotificationsBody;"]},"metadata":{},"sourceType":"module"}